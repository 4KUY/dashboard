{"version":3,"file":"static/js/934.985c6b16.chunk.js","mappings":"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","sources":["content/overview/Hero/index.tsx","content/overview/index.tsx"],"sourcesContent":["import { Box, Button, Container, FormControl, Grid, TextField, Typography } from '@mui/material';\r\n\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport manualResult, { manualResult1 } from '../../../http/fetchLogin'\r\nimport { useEffect, useState } from 'react';\r\nconst TypographyH1 = styled(Typography)(\r\n  ({ theme }) => `\r\n    font-size: ${theme.typography.pxToRem(50)};\r\n`\r\n);const TypographyH2 = styled(Typography)(\r\n  ({ theme }) => `\r\n    font-size: ${theme.typography.pxToRem(15)};\r\n`\r\n);\r\n\r\nconst LabelWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n    background-color: ${theme.colors.success.main};\r\n    color: ${theme.palette.success.contrastText};\r\n    font-weight: bold;\r\n    border-radius: 30px;\r\n    text-transform: uppercase;\r\n    display: inline-block;\r\n    font-size: ${theme.typography.pxToRem(11)};\r\n    padding: ${theme.spacing(0.5)} ${theme.spacing(1.5)};\r\n    margin-bottom: ${theme.spacing(2)};\r\n`\r\n);\r\n\r\nconst LoginField = styled(Box)(\r\n  ({ theme }) => `\r\n    margin-bottom: ${theme.spacing(2)};\r\n  `\r\n)\r\nconst TsAvatar = styled(Box)(\r\n  ({ theme }) => `\r\n    width: ${theme.spacing(8)};\r\n    height: ${theme.spacing(8)};\r\n    border-radius: ${theme.general.borderRadius};\r\n    background-color: #dfebf6;\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0 auto ${theme.spacing(2)};\r\n\r\n    img {\r\n      width: 60%;\r\n      height: 60%;\r\n      display: block;\r\n    }\r\n`\r\n);\r\n\r\nfunction Hero() {\r\n  \r\n  const [email, setEmail] = useState('kibrito-admin@kibrito.org')\r\n  \r\n  const [password, setPassword] = useState('easypass')\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const loginConfirm = () => {\r\n    manualResult(email, password).finally(() => {\r\n      navigate(\"/dashboards/crypto\")\r\n    })\r\n}\r\nreturn (\r\n  <Container maxWidth=\"lg\" sx={{ textAlign: 'center' }}>\r\n    <Grid\r\n      spacing={{ xs: 6, md: 10 }}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      container\r\n    >\r\n      <Grid item md={10} lg={8} mx=\"auto\">\r\n        <LabelWrapper color=\"success\">Version 2.0.0</LabelWrapper>\r\n        <TypographyH1 sx={{ mb: 2 }} variant=\"h1\">\r\n          White React Typescript Admin Dashboard\r\n        </TypographyH1>\r\n\r\n        <TypographyH2\r\n            sx={{ lineHeight: 1.5, pb: 4 }}\r\n            variant=\"h4\"\r\n            color=\"text.secondary\"\r\n            fontWeight=\"normal\"\r\n          >\r\n            email = kibrito-admin@kibrito.org\r\n            password = easypass\r\n          </TypographyH2>\r\n\r\n        <LoginField\r\n\r\n        >\r\n          <TextField\r\n            required\r\n            id=\"outlined-required\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            label=\"Required\"\r\n            sx={{ marginRight: '20px' }}\r\n          />\r\n          <TextField\r\n            id=\"outlined-password-input\"\r\n            \r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n        </LoginField>\r\n        <Button\r\n          onClick={() => loginConfirm()}\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n        >\r\n          Login\r\n        </Button>\r\n        \r\n      </Grid>\r\n    </Grid>\r\n  </Container>\r\n);\r\n}\r\n\r\nexport default Hero;\r\n","import { Box, Container, Card } from '@mui/material';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Logo from 'src/components/LogoSign';\r\nimport Hero from './Hero';\r\n\r\nconst OverviewWrapper = styled(Box)(\r\n  () => `\r\n    overflow: auto;\r\n    flex: 1;\r\n    overflow-x: hidden;\r\n    align-items: center;\r\n`\r\n);\r\n\r\nfunction Overview() {\r\n  return (\r\n    <OverviewWrapper>\r\n      <Helmet>\r\n        <title>Tokyo Free White React Typescript Admin Dashboard</title>\r\n      </Helmet>\r\n      <Container maxWidth=\"lg\">\r\n        <Box display=\"flex\" justifyContent=\"center\" py={5} alignItems=\"center\">\r\n          <Logo />\r\n        </Box>\r\n        <Card sx={{ p: 10, mb: 10, borderRadius: 12 }}>\r\n          <Hero />\r\n        </Card>\r\n      </Container>\r\n    </OverviewWrapper>\r\n  );\r\n}\r\n\r\nexport default Overview;\r\n"],"names":["TypographyH1","styled","Typography","theme","typography","pxToRem","TypographyH2","LabelWrapper","Box","colors","success","main","palette","contrastText","spacing","LoginField","general","borderRadius","useState","email","setEmail","password","setPassword","navigate","useNavigate","Container","maxWidth","sx","textAlign","Grid","xs","md","justifyContent","alignItems","container","item","lg","mx","color","mb","variant","lineHeight","pb","fontWeight","TextField","required","id","value","onChange","e","target","label","marginRight","type","autoComplete","Button","onClick","manualResult","finally","size","OverviewWrapper","display","py","Card","p"],"sourceRoot":""}